{"version":3,"sources":["components/playground/NodeNetDiagram.jsx","components/header/Header.jsx","components/footer/Footer.jsx","actions/index.js","components/playground/loader/ModalDefault.jsx","components/playground/loader/Loader.jsx","components/playground/navio-container/ActionGroup.jsx","components/playground/navio-container/sidebar/Attribute.jsx","components/playground/navio-container/sidebar/ColorPicker.jsx","components/playground/navio-container/sidebar/SortableItem.jsx","components/playground/navio-container/sidebar/SortableList.jsx","components/playground/navio-container/sidebar/Sider.jsx","components/playground/navio-container/NavioContainer.jsx","components/playground/NetNavioContainer.jsx","components/playground/sample-data/Sample.jsx","components/playground/Playground.jsx","components/App.jsx","reducers/shipyard.js","reducers/ui.js","reducers/index.js","registerServiceWorker.js","index.js"],"names":["selected","canvas","ctx","r","width","height","simulation","color","Header","react_default","a","createElement","style","fontSize","textAlign","icon","marginRight","type","Footer","href","target","rel","types","getType","attribute","notNumber","isNaN","isDate","attr","mydate","Date","getDate","checkDate","getAttributesType","keys","atts","data","attributes","JSON","parse","stringify","ids","reg","sample","n","ss","i","push","map","d","Math","floor","length","getSample","console","log","_loop","key","test","name","id","res","accumulative","forEach","max","typei","_types$i","Object","slicedToArray","setData","source","slice","alias","checked","settings","_getAttributesType","_getAttributesType2","row","att","mynumber","setComponentClasses","changeCheckStatus","status","changeTypeStatus","updateFilteredData","exportData","toggleSettingsVisible","index","visible","setAttributeColor","event","connect","state","ui","datasets","shipyard","confirmLoading","dispatch","showModal","handleOk","handleCancel","toggleLoading","toggleDataLoaded","_ref","pathDataset","es_button","ghost","onClick","modal","title","onOk","onCancel","footer","gutter","col","xs","sm","md","lg","xl","card","concat","d3","err","className","overflowY","cursor","marginBottom","description","size","n_attributes","Dragger","Upload","toggleNetworkDataLoaded","handleFile","file","reader","window","FileReader","onload","lEvent","values","format","split","pop","toLowerCase","vega","result","columns","readAsText","handleNetworkFile","margin","alignItems","minHeight","accept","beforeUpload","e","divider","loader_ModalDefault","prompt","require","ButtonGroup","Button","Group","Option","Select","linksid","networkLoaded","arcsData","colorAttribute","resetData","toggleSidebar","setArcsData","arcsdata","_getAttributesType3","_getAttributesType4","setColorAttribute","setNodesLabel","setNodesId","handleArcsFile","download","datos","o","nuevo","__i","x","y","vy","vx","items","replacer","value","header","csv","fieldName","join","unshift","blob","Blob","FileSaver","saveAs","linksdata","link","weight","weigth","linksitems","linksreplacer","linksheader","linkscsv","paddingTop","tooltip","placement","mimeType","catColumns","seqColumns","elHtml","elOtroHtml","find","obj","document","getElementById","setAttribute","encodeURIComponent","paddingLeft","paddingRight","ActionGroup_Dragger","selectOptions","label","inputAttrs","then","catch","error","span","padding","es_select","defaultValue","onChange","filter","OptGroup","Attribute","_this","props","_this2","this","_this$props","toggleVisible","addComponentClass","deleteLastComponentClass","ico","align","justify","offset","shape","setState","dropdownMatchSelectWidth","Attribute_Option","es_switch","defaultChecked","marginLeft","Component","param","ColorPicker","setColor","Categorical","SequentialPicker","cat10","arr10","ColorPicker_Option","backgroundColor","colors","click","ownProps","attributeName","onChangeInput","f","SortableItem","SortableElement","number","componentClasses","toggleColorVisible","borderRadius","sidebar_Attribute","sidebar_ColorPicker","input","addonAfter","onPressEnter","classes","setAlias","SortableList","SortableContainer","marginTop","sidebar_SortableItem","reorderAttributes","oldIndex","newIndex","j","sidebar_SortableList","onSortEnd","_ref2","copy","toConsumableArray","newArr","arrayMove","cat","seq","dat","NavioContainer","getScaleOrdinalScheme","scheme","d3ScaleChromatic","getScaleOrdinalColor","getScaleTimeColor","setupNavio","nn","navio","updateCallback","addCategoricalAttrib","addSequentialAttrib","range","setupNavio2","updated","updateAttribute","deleteWidget","myNode","firstChild","removeChild","showSidebar","sidebarStyles","navio_container_ActionGroup","Sider","overflowX","ref","graph","links","NodeNetDiagram","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","charge","linkDistance","linkStrength","centerStrength","active","alphaTarget","restart","subject","fx","fy","beginPath","fillStyle","moveTo","nodesLabel","arc","PI","fillText","fill","l","lineTo","clearRect","strokeStyle","drawLink","stroke","globalAlpha","drawNode","bind","row2","elem1","elem2","nodesid","nodes","node","getContext","force","strength","on","updateCanvas","container","dragsubject","dragstarted","dragged","dragended","offsetX","offsetY","_this3","distance","alpha","NetNavioContainer","slider","min","disabled","changeCharge","changeLinkDistance","changeLinkStrength","changeCenterStrength","preview","column","dataIndex","p","__seqId","table","bordered","pagination","dataSource","scroll","dataLoaded","content","navio_container_NavioContainer","sample_data_Sample","playground_NodeNetDiagram","loader_Loader","Layout","Content","headerStyle","boxShadow","mainStyle","loading","layout","affix","App_Header","header_Header","playground_Playground","App_Footer","footer_Footer","initialState","linksAttributes","exportLinksData","linksSource","arguments","undefined","action","assign","attrs","pos","indexOf","attrs2","pos2","sourceData","datum","actualData","attributesColor","closed","componentsDeleted","splice","componentAdd","componentsAdd","temp","swaped","array","k","combineReducers","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","loggerMiddleware","createLogger","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","render","react_redux_es","components_App","URL","process","origin","addEventListener","fetch","response","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.58ace682.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport { Row, Col, Slider } from 'antd';\nimport { connect } from 'react-redux';\nimport * as d3 from '../../../node_modules/d3/build/d3.js';\nimport Side from './navio-container/sidebar/Sider';\nimport ActionGroup from './navio-container/ActionGroup';\nimport NetNavioContainer from './NetNavioContainer';\nimport { updateAttribute, updateFilteredData } from './../../actions';\nimport './navio-container/sidebar.css';\nimport * as d3ScaleChromatic from \"d3-scale-chromatic\";\n\nvar graph = {\n  // nodesTest:[\n  //   {name:'John', age:35},\n  //   {name:'John1', age:35},\n  //   {name:'John2', age:35},\n  //   {name:'John3', age:35},\n  //   {name:'John4', age:35},\n  //   {name:'John5', age:35},\n  // ],\n  // linksTest:[\n  //   {source: 'John', target:'John1'},\n  //   {source: 'John', target:'John2'},\n  //   {source: 'John', target:'John3'},\n  //   {source: 'John', target:'John4'},\n  //   {source: 'John1', target:'John5'},\n  //   {source: 'John5', target:'John3'},\n  //   {source: 'John2', target:'John1'},\n  // ],\n  links:[\n\n  ]\n}\n\nconst cat = 'CATEGORICAL';\nconst seq = 'SEQUENTIAL';\nconst dat = 'DATE';\nconst ord = 'ORDINAL';\nvar selected,canvas, ctx, r, width,  height, simulation, color, x, y;\nclass NodeNetDiagram extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      charge:-30,\n      linkDistance: 50,\n      linkStrength: 0.5,\n      centerStrength: 0.5\n    }\n  }\n  dragstarted() {\n    if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n    d3.event.subject.fx = d3.event.subject.x;\n    d3.event.subject.fy = d3.event.subject.y;\n  }\n   dragged() {\n    d3.event.subject.fx = d3.event.x;\n    d3.event.subject.fy = d3.event.y;\n  }\n   dragended() {\n    if (!d3.event.active) simulation.alphaTarget(0);\n    d3.event.subject.fx = null;\n    d3.event.subject.fy = null;\n  }\n  drawNode(d){\n    ctx.beginPath();\n    ctx.fillStyle = '#000000';\n    if(this.props.colorAttribute!== \"\"){\n      ctx.fillStyle = color(d[this.props.colorAttribute]);\n    }\n    ctx.moveTo(d.x, d.y);\n    if(this.props.nodesLabel && selected===d){\n      ctx.arc(d.x,d.y, r*1.2,0, Math.PI*2);\n      ctx.fillStyle = '#000000';\n      ctx.fillText(selected[this.props.nodesLabel],selected.x+r,selected.y+r);\n    }\n    else{\n      ctx.arc(d.x,d.y, r,0, Math.PI*2);\n\n    }\n    ctx.fill();\n\n\n  }\n  drawLink(l) {\n    ctx.moveTo(l.source.x, l.source.y);\n    ctx.lineTo(l.target.x, l.target.y);\n  }\n  dragsubject() {\n    return simulation.find(d3.event.x, d3.event.y);\n  }\n  updateCanvas(){\n    ctx.clearRect(0,0,width,height);\n\n    ctx.beginPath();\n    // ctx.globalAlpha = 0.9;\n    ctx.strokeStyle = \"#aaa\";\n    graph.links.forEach(this.drawLink);\n    ctx.stroke();\n\n    ctx.globalAlpha = 1.0;\n    this.props.data.forEach(this.drawNode.bind(this));\n  }\n  generateLinks(id, attribute){\n    for (var row in this.props.data) {\n          for (var row2 in this.props.data) {\n            var elem1=this.props.data[row];\n            var elem2=this.props.data[row2];\n            if (elem1[attribute]===elem2[attribute] && row!=row2) {\n              graph.links.push({source: elem1[id], target: elem2[id]});\n            }\n          }\n      }\n  }\n  componentDidMount() {\n\n    let id= this.props.nodesid;\n    graph.links= this.props.arcsData;\n    graph.nodes= this.props.data;\n    canvas = d3.select(\"#network\");\n    width = canvas.attr(\"width\");\n    height = canvas.attr(\"height\");\n    ctx = canvas.node().getContext(\"2d\");\n    r= 5;\n    color= d3.scaleOrdinal(d3.schemeCategory20);\n    // color = d3.scalePow()\n    //   .range([d3ScaleChromatic.interpolatePurples(0), d3ScaleChromatic.interpolatePurples(1)]),\n\n    x= d3.scaleOrdinal().range([200,width-200]);\n    y= d3.scaleOrdinal().range([100,height-200]);\n\n    simulation= d3.forceSimulation()\n      .force(\"x\", d3.forceX(width/2))\n      .force(\"y\", d3.forceY(height/2))\n      // .force(\"x\", d3.forceX(function (d) { return x(d[groupingAttribute]); }))\n      // .force(\"y\", d3.forceY(function (d) { return y(d[groupingAttribute]); }))\n      .force(\"collide\", d3.forceCollide(r+1))\n      .force(\"charge\", d3.forceManyBody()\n      .strength(this.state.charge))\n      .on(\"tick\",this.updateCanvas.bind(this))\n      .force(\"link\", d3.forceLink()\n      .id(function (d) { return d[id]; }));\n    // this.generateLinks('id','married');\n    simulation.nodes(graph.nodes);\n\n\n    simulation.force(\"link\")\n    .links(graph.links);\n    canvas\n      .call(d3.drag()\n          .container(canvas.node())\n          .subject(this.dragsubject)\n          .on(\"start\", this.dragstarted)\n          .on(\"drag\", this.dragged)\n          .on(\"end\", this.dragended));\n    canvas\n      .on(\"mousemove\", () => {\n        // const x=d3.mouse(canvas.node())[0];\n        // const y=d3.mouse(canvas.node())[1];\n        const x= d3.event.offsetX;\n        const y= d3.event.offsetY;\n        selected = simulation.find(x,y,r*3);\n        this.updateCanvas();\n\n      })\n    // graph.nodes.forEach(function(d){\n    //   d.x= Math.random()*width\n    //   d.y= Math.random()*height\n    // });\n  }\n  componentDidUpdate() {\n    let id= this.props.nodesid;\n    graph.nodes=this.props.data;\n    simulation.nodes(graph.nodes);\n    graph.links=[];\n    this.props.arcsData.forEach(\n      (link) =>\n      {\n        console.log(typeof link.source);\n        if( ((typeof link.source === 'number' || typeof link.source === 'string') && this.props.data.find(n => n[id] == link.source) && this.props.data.find(n => n[id] == link.target))\n        || (typeof link.source === 'object' && this.props.data.find(n => n[id] == link.source[id]) && this.props.data.find(n => n[id] == link.target[id]))\n        ){\n          graph.links.push(link);\n        }\n      }\n    );\n    simulation\n    .force(\"x\", d3.forceX(width/2).strength(this.state.centerStrength))\n    .force(\"y\", d3.forceY(height/2).strength(this.state.centerStrength));\n    simulation.force(\"link\", d3.forceLink()\n    .id(function (d) { return d[id]; }));\n\n    simulation.force(\"link\")\n    .links(graph.links)\n    .strength(this.state.linkStrength)\n    .distance(this.state.linkDistance);\n    simulation.force(\"charge\", d3.forceManyBody()\n    .strength(this.state.charge));\n    simulation.alpha(1).restart();\n    this.updateCanvas();\n\n\n  }\n  changeCharge(value){\n    this.setState({charge: value});\n  }\n\n  changeLinkStrength(value){\n    this.setState({linkStrength: value/100});\n  }\n\n  changeLinkDistance(value){\n    this.setState({linkDistance: value});\n  }\n  changeCenterStrength(value){\n    this.setState({centerStrength: value/100});\n  }\n\n\n\n\n  render () {\n\n    const { showSidebar, arcsData, networkLoaded } = this.props;\n    const sidebarStyles = ['sidebar'];\n    if (!showSidebar) {sidebarStyles.push('hide')}\n    return (\n      <div>\n        <ActionGroup />\n        <Row>\n          <Col span={10} className={sidebarStyles.join(' ')}>\n            <Side />\n          </Col>\n          <Col span ={12}>\n             <NetNavioContainer/>\n          </Col>\n           <Col span={showSidebar ? 8 : 12} >\n              <canvas\n              style={{ overflowX: 'scroll'}}\n              width= '500'\n              height= '500'\n              id=\"network\"\n            ></canvas>\n          </Col>\n        </Row>\n        <Row>\n          <Col span ={12}>\n          </Col>\n          <Col span={2}>\n            Charge:\n          </Col>\n          <Col span={10}>\n            <Slider defaultValue={this.state.charge} min={-100} max={100} disabled={false} onChange={this.changeCharge.bind(this)}/>\n          </Col>\n        </Row>\n        {arcsData.length !==0 ? (\n          <div>\n        <Row>\n          <Col span ={12}>\n          </Col>\n          <Col span={2}>\n            Link distance:\n          </Col>\n          <Col span={10}>\n            <Slider defaultValue={this.state.linkDistance} disabled={false} onChange={this.changeLinkDistance.bind(this)}/>\n          </Col>\n        </Row>\n        <Row>\n          <Col span ={12}>\n          </Col>\n          <Col span={2}>\n            Link strength:\n          </Col>\n          <Col span={10}>\n            <Slider defaultValue={this.state.linkStrength*100} min={0} max={100} disabled={false} onChange={this.changeLinkStrength.bind(this)}/>\n          </Col>\n        </Row>\n        </div>\n        ) : ( <br></br>)\n        }\n        <Row>\n          <Col span ={12}>\n          </Col>\n          <Col span={2}>\n            Center strength:\n          </Col>\n          <Col span={10}>\n            <Slider defaultValue={this.state.centerStrength*100} min={0} max={100} disabled={false} onChange={this.changeCenterStrength.bind(this)} />\n          </Col>\n        </Row>\n     </div>\n\n\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  showSidebar: state.ui.showSidebar,\n  attributes: state.shipyard.attributes,\n  data: state.shipyard.exportData,\n  updated: state.shipyard.updated,\n  arcsData: state.shipyard.arcsData,\n  colorAttribute: state.shipyard.colorAttribute,\n  nodesLabel: state.shipyard.nodesLabel,\n  nodesid: state.shipyard.nodesid,\n  networkLoaded: state.ui.networkLoaded,\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateAttribute: () => dispatch(updateAttribute()),\n  updateFilteredData: data => dispatch(updateFilteredData(data)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NodeNetDiagram);\n","import React from 'react';\nimport { Icon } from 'antd';\n\nconst Header = () => (\n  <div>\n    <div style={{fontSize: '1.5em', textAlign: 'center'}}>\n      <Icon style={{ marginRight: '0.5em' }} type=\"compass\" />\n      Shipyard\n    </div>\n  </div>\n);\n\nexport default Header;\n","import React from 'react';\nimport { Icon } from 'antd';\n\nconst Footer = () => (\n  <div style={{ textAlign: 'right' }}>\n    <a\n      href=\"https://github.com/john-guerra/Navio\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      Github Project MIT License <Icon type=\"github\" />\n    </a>\n  </div>\n);\n\nexport default Footer;\n","/*\n *  action types\n */\n\nexport const SET_DATA = 'SET_DATA';\nexport const SET_ARCS_DATA = 'SET_ARCS_DATA';\nexport const SET_NODES_ID= 'SET_NODES_ID';\nexport const SET_ATTRIBUTES = 'SET_ATTRIBUTES';\nexport const SET_COLOR_ATTRIBUTE = 'SET_COLOR_ATTRIBUTE';\nexport const SET_NODES_LABEL='SET_NODES_LABEL';\nexport const SET_ATTRIBUTE_COLOR = 'SET_ATTRIBUTE_COLOR';\nexport const SHOW_MODAL = 'SHOW_MODAL';\nexport const HANDLE_OK = 'HANDLE_OK';\nexport const HANDLE_CANCEL = 'HANDLE_CANCEL';\nexport const TOGGLE_LOADING = 'TOGGLE_LOADING';\nexport const TOGGLE_DATA_LOADED = 'TOGGLE_DATA_LOADED';\nexport const TOGGLE_NETWORK_DATA_LOADED = 'TOGGLE_NETWORK_DATA_LOADED';\nexport const TOGGLE_SIDEBAR = 'TOGGLE_SIDEBAR';\nexport const RESET_DATA = 'RESET_DATA';\nexport const CHANGE_CHECK_STATUS = 'CHANGE_CHECK_STATUS';\nexport const CHANGE_TYPE_STATUS = 'CHANGE_TYPE_STATUS';\nexport const UPDATE_ATTRIBUTE = 'UPDATE_ATTRIBUTE';\nexport const UPDATE_FILTERED_DATA = 'UPDATE_FILTERED_DATA';\nexport const TOGGLE_SETTINGS_VISIBLE = 'TOGGLE_SETTINGS_VISIBLE';\nexport const TOGGLE_COLOR_VISIBLE = 'TOGGLE_COLOR_VISIBLE';\nexport const DELETE_COMPONENT_CLASS = 'DELETE_COMPONENT_CLASS';\nexport const ADD_COMPONENT_CLASS = 'ADD_COMPONENT_CLASS';\nexport const SET_COMPONENT_CLASSES = 'SET_COMPONENT_CLASSES';\nexport const SWAP_COMPONENT_CLASSES = 'SWAP_COMPONENT_CLASSES';\nexport const SET_ALIAS = 'SET_ALIAS';\n\n// categorical, ordinal, sequential, date\nconst seq = 'SEQUENTIAL';\nconst cat = 'CATEGORICAL';\nconst ord = 'ORDINAL';\nconst dat = 'DATE';\nconst types = [\n  [seq, 'NUMBER'],\n  [dat, dat],\n  [cat, 'STRING']\n]\n/**\n * Method that return true if a string is a date\n * @param {*} attr\n */\nconst checkDate = (attr) => {\n  const mydate = new Date(attr);\n  if (isNaN(mydate.getDate())) {\n    return false;\n  }\n  return true;\n};\n\n/**\n * Returns the type of attribute casting each case.\n * @param {*} attribute\n */\nconst getType = (attribute) => {\n  const notNumber = isNaN(attribute);\n  const isDate = checkDate(attribute);\n  if (!notNumber) {\n    // return [seq, 'NUMBER'];\n    return 0;\n  } else if (isDate) {\n    // return [dat, 'DATE'];\n    return 1;\n  } else {\n    // return [cat, 'STRING'];\n    return 2;\n  }\n}\n/**\n * Function that returns n samples from array\n * @param {Integer} n - Number of samples\n * @param {Array<Object>} data - Array with data objects\n */\nconst getSample = (n, data) => {\n  let ss = [];\n  for (let i = 1; i < n + 1; i++) {\n    ss.push(i);\n  }\n  const indexes = ss.map(d => Math.floor(data.length*(d/n))-1);\n  const sample = indexes.map(d => data[d]);\n  return sample;\n\n}\nconst getAttributesType = (keys, atts, data) => {\n  let attributes = JSON.parse(JSON.stringify(atts));\n  let ids = [];\n  // regular expression used to match strings starting and finishing with id or key or in a word within non-word characters\n  const reg = /^(id|key)|(id|key)$|\\W+\\_*(key|id)+\\_*\\W+|\\W+\\_*(key|id)+\\_*\\W*/gmi;\n  // returns 6 uniformly distributed rows\n  const sample = getSample(6, data);\n  console.log(sample);\n  for (let key = 0; key < keys.length; key += 1) {\n    // checks for ID\n    if (reg.test(attributes[key].name)) {\n      attributes[key].id = true;\n      ids.push(atts[key].name);\n    }\n    const sampleAttributes = sample.map(d => d[keys[key]]);\n    const res = sampleAttributes.map(getType);\n    let accumulative = [0,0,0];\n    res.forEach(d => accumulative[d] += 1);\n    let max = 0;\n    let i = 0;\n    for(let typei = 0; typei < accumulative.length; typei++) {\n      if(accumulative[typei] > max) {\n        max = accumulative[typei];\n        i = typei;\n      }\n    }\n    const [type, data] = types[i];\n    attributes[key].type = type;\n    attributes[key].data = data;\n  }\n  return [attributes, ids];\n};\n\n/*\n * action creators\n */\nexport const setData = (data) => {\n  const source = data.slice(0);\n  /* Creates an empty array that will contain the metadata of the attributes */\n  let attributes = [];\n  let ids = [];\n  const keys = Object.keys(data[0]);\n  for (let i = 0; i < keys.length; i += 1) {\n    const attribute = {\n      name: keys[i],\n      alias: keys[i],\n      checked: true,\n      type: '',\n      id: false,\n      settings: false,\n    };\n    attributes.push(attribute);\n  }\n  [attributes, ids] = getAttributesType(keys, attributes, data);\n  const parsedData = data.map((d) => {\n    let row = JSON.parse(JSON.stringify(d));\n    attributes.forEach((att)=> {\n      if (att.data === 'DATE') {\n        const mydate = new Date(row[att.name]);\n        if (isNaN(mydate.getDate())) {\n          // row[att.name] = null;\n        } else {\n          row[att.name] = mydate;\n        }\n      } else if (att.data === 'NUMBER') {\n        const mynumber = +row[att.name];\n        if (isNaN(mynumber)) {\n          // row[att.name] = null;\n        } else {\n          row[att.name] = mynumber;\n        }\n      }\n    });\n    return row;\n  });\n  return {\n    type: SET_DATA,\n    source,\n    data: parsedData,\n    attributes,\n    ids,\n  };\n};\n\n/*\n * action creators\n */\nexport const setArcsData = (arcsdata) => {\n  const source = arcsdata.slice(0);\n  /* Creates an empty array that will contain the metadata of the attributes */\n  let attributes = [];\n  let ids = [];\n  const keys = Object.keys(arcsdata[0]);\n  for (let i = 0; i < keys.length; i += 1) {\n    const attribute = {\n      name: keys[i],\n      alias: keys[i],\n      checked: true,\n      type: '',\n      id: false,\n      settings: false,\n    };\n    attributes.push(attribute);\n  }\n  [attributes, ids] = getAttributesType(keys, attributes, arcsdata);\n  const parsedData = arcsdata.map((d) => {\n    let row = JSON.parse(JSON.stringify(d));\n    attributes.forEach((att)=> {\n      if (att.data === 'DATE') {\n        const mydate = new Date(row[att.name]);\n        if (isNaN(mydate.getDate())) {\n          // row[att.name] = null;\n        } else {\n          row[att.name] = mydate;\n        }\n      } else if (att.data === 'NUMBER') {\n        const mynumber = +row[att.name];\n        if (isNaN(mynumber)) {\n          // row[att.name] = null;\n        } else {\n          row[att.name] = mynumber;\n        }\n      }\n    });\n    return row;\n  });\n  return {\n    type: SET_ARCS_DATA,\n    source,\n    arcsData: parsedData,\n    attributes,\n    ids,\n  };\n  // return {\n  //   type: SET_ARCS_DATA,\n  //   arcsData: arcsdata\n  // };\n};\n\nexport const setNodesId= id=>({\n  type: SET_NODES_ID,\n  id,\n});\n\nexport const setComponentClasses = attributes => ({\n  type: SET_COMPONENT_CLASSES,\n  attributes,\n});\n\nexport const setColor = (color, attributeName) => ({\n  type: SET_ATTRIBUTE_COLOR,\n  color,\n  attributeName,\n});\n\nexport const showModal = () => ({ type: SHOW_MODAL });\n\nexport const handleOk = () => {};\n\nexport const handleCancel = () => {};\n\nexport const toggleLoading = () => ({ type: TOGGLE_LOADING });\n\nexport const toggleDataLoaded = () => ({ type: TOGGLE_DATA_LOADED });\n\nexport const toggleNetworkDataLoaded = () => ({type: TOGGLE_NETWORK_DATA_LOADED});\n\nexport const resetData = () => ({ type: RESET_DATA });\n\nexport const toggleSidebar = () => ({ type: TOGGLE_SIDEBAR });\n\nexport const changeCheckStatus = (attribute, status) => ({\n  type: CHANGE_CHECK_STATUS,\n  attribute,\n  status,\n});\n\nexport const changeTypeStatus = (attribute, status) => ({\n  type: CHANGE_TYPE_STATUS,\n  attribute,\n  status,\n});\n\nexport const updateAttribute = () => ({ type: UPDATE_ATTRIBUTE });\n\nexport const updateFilteredData = exportData => ({ type: UPDATE_FILTERED_DATA, exportData });\n\nexport const toggleSettingsVisible = (index, visible) => ({\n  type: TOGGLE_SETTINGS_VISIBLE,\n  index,\n  visible,\n});\n\nexport const setAttributes = attributes => ({\n  type: SET_ATTRIBUTES,\n  attributes,\n});\n\nexport const setColorAttribute = attribute => ({\n  type: SET_COLOR_ATTRIBUTE,\n  attribute,\n});\n\nexport const setNodesLabel = attribute => ({\n  type: SET_NODES_LABEL,\n  attribute,\n});\n\nexport const setAttributeColor = (color, event, index) => ({\n  type: SET_ATTRIBUTE_COLOR,\n  color,\n  event,\n  index,\n});\n\nexport const toggleColorVisible = index => ({\n  type: TOGGLE_COLOR_VISIBLE,\n  index,\n});\n\nexport const deleteLastComponentClass = index => ({\n  type: DELETE_COMPONENT_CLASS,\n  index,\n});\n\nexport const addComponentClass = (className, index) => ({\n  type: ADD_COMPONENT_CLASS,\n  className,\n  index,\n})\n\nexport const swapComponentClasses = (i, j) => ({\n  type: SWAP_COMPONENT_CLASSES,\n  i,\n  j,\n})\n\nexport const setAlias = (event, attribute) => ({\n  type: SET_ALIAS,\n  event,\n  attribute,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Modal, Card, Row, Col } from 'antd';\nimport { showModal, handleOk, setData, toggleLoading, toggleDataLoaded, setComponentClasses } from './../../../actions';\nimport * as d3 from 'd3';\n\nconst ModalDefault = ({ visible, datasets, confirmLoading, showModal, handleOk, handleCancel, setData, toggleLoading, toggleDataLoaded, setComponentClasses }) => {\n  // const pathDataset = './../../../../public/datasets/';\n  // const pathDataset = 'datasets/'; //for local deployment\n  const pathDataset = 'https://raw.githubusercontent.com/john-guerra/Navio/master/shipyard/public/datasets/'\n\n  const handleDataset = (name) => {\n    toggleLoading();\n    console.log(`${pathDataset}${name}`);\n    d3.csv(`${pathDataset}${name}`, (err, data) => {\n      if (err) throw err;\n      console.log('DATA PREdEFINED DATASETS', data);\n      setData(data);\n      setComponentClasses(Object.keys(data[0]));\n      toggleLoading();\n      toggleDataLoaded();\n      handleCancel();\n    });\n  };\n  return (\n    <div>\n      <Button type=\"primary\" ghost onClick={showModal}>Choose one</Button>\n      <Modal\n        title=\"Datasets\"\n        visible={visible}\n        onOk={handleOk}\n        confirmLoading={confirmLoading}\n        onCancel={handleCancel}\n        width=\"90%\"\n        footer={[\n          <Button onClick={handleCancel} key=\"back\">Cancel</Button>,\n        ]}\n      >\n        <Row gutter={32}>\n          { datasets.map(d => (\n            <Col xs={24} sm={12} md={12} lg={6} xl={6} key={d.id}>\n              <Card\n                onClick={() => handleDataset(d.name)}\n                className=\"hoverable\"\n                title={d.title}\n                style={{ width: '100%', height: '30vh', overflowY: 'scroll', cursor: 'pointer', marginBottom: 32 }}\n              >\n                <p>Description: {d.description}</p>\n                <p>Records(rows): {d.size}</p>\n                <p>Attributes: {d.n_attributes}</p>\n              </Card>\n            </Col>\n          ))}\n        </Row>\n      </Modal>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  visible: state.ui.visible,\n  datasets: state.shipyard.datasets,\n  confirmLoading: state.ui.confirmLoading,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showModal: () => dispatch(showModal()),\n  handleOk: name => dispatch(handleOk(name)),\n  handleCancel: () => dispatch(showModal()),\n  setData: (data) => dispatch(setData(data)),\n  toggleLoading: () => dispatch(toggleLoading()),\n  toggleDataLoaded: () => dispatch(toggleDataLoaded()),\n  setComponentClasses: atts => dispatch(setComponentClasses(atts)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalDefault);\n","import React from 'react';\nimport { Upload, Icon, Divider } from 'antd';\nimport ModalDefault from './ModalDefault';\nimport { connect } from 'react-redux';\nimport { toggleLoading, setData, toggleDataLoaded, toggleNetworkDataLoaded, setComponentClasses } from './../../../actions';\nimport * as vega from 'vega';\nimport * as d3 from 'd3';\n\nconst Dragger = Upload.Dragger;\nconst Loader = ({ attributes, toggleLoading, setData, toggleDataLoaded,toggleNetworkDataLoaded, setComponentClasses }) => {\n  const beforeUpload = (e) => {\n    toggleLoading();\n    handleFile(e);\n  };\n  const beforeNetworkUpload = (e) => {\n    toggleLoading();\n    handleNetworkFile(e);\n  }\n  const handleFile = (file) => {\n    const reader = new window.FileReader();\n    if (file == null) {\n      return;\n    }\n    reader.onload = (lEvent) => {\n      const format = file.name.split('.').pop().toLowerCase();\n      var values;\n      try {\n        console.log('TRY')\n        // if (format === 'txt' || (format !== \"csv\" && format !== \"tsv\")) {\n        //   throw Error();\n        // }\n        values = vega.read(lEvent.target.result, {type: format});\n        // let csvFormat = d3.dsvFormat(\",\"); should be csvFormat??\n        // values = csvFormat.parse(lEvent.target.result);\n        setData(values);\n        setComponentClasses(Object.keys(values[0]));\n        toggleLoading();\n        toggleDataLoaded();\n      } catch (err) {\n        console.log('CATCH', err)\n        // const separator = prompt('Write a delimiter for your dataset (e.g: ;)');\n        // let ssv = d3.dsvFormat(separator);\n        let ssv = d3.dsvFormat(',');\n        values = ssv.parse(lEvent.target.result);\n        delete values.columns;\n        setData(values);\n        setComponentClasses(Object.keys(values[0]));\n        toggleLoading();\n        toggleDataLoaded();\n      }\n    };\n\n    reader.readAsText(file);\n  }\n  const handleNetworkFile = (file) => {\n    const reader = new window.FileReader();\n    if (file == null) {\n      return;\n    }\n    reader.onload = (lEvent) => {\n      const format = file.name.split('.').pop().toLowerCase();\n      var values;\n      try {\n        console.log('TRY')\n        // if (format === 'txt' || (format !== \"csv\" && format !== \"tsv\")) {\n        //   throw Error();\n        // }\n        values = vega.read(lEvent.target.result, {type: format});\n        // let csvFormat = d3.dsvFormat(\",\"); should be csvFormat??\n        // values = csvFormat.parse(lEvent.target.result);\n        setData(values);\n        setComponentClasses(Object.keys(values[0]));\n        toggleLoading();\n        toggleNetworkDataLoaded();\n      } catch (err) {\n        console.log('CATCH', err)\n        // const separator = prompt('Write a delimiter for your dataset (e.g: ;)');\n        // let ssv = d3.dsvFormat(separator);\n        let ssv = d3.dsvFormat(',');\n        values = ssv.parse(lEvent.target.result);\n        delete values.columns;\n        setData(values);\n        setComponentClasses(Object.keys(values[0]));\n        toggleLoading();\n        toggleNetworkDataLoaded();\n\n      }\n    };\n\n    reader.readAsText(file);\n  }\n\n\n  return (\n    <div style={{ textAlign: 'center', margin: '1em' }}>\n      <Dragger\n        style={{ alignItems: 'center', minHeight: '30vh' }}\n        accept=\".csv,.tsv,.txt\"\n        beforeUpload={beforeUpload}\n        name=\"file\"\n      >\n        <div className=\"dragger\">\n          <p className=\"ant-upload-drag-icon\">\n            <Icon type=\"upload\" />\n          </p>\n          <h1 style={{ fontSize: '2em' }}>\n            Click or Drag and drop here to upload your dataset\n          </h1>\n          <p className=\"ant-upl  827 root      20   0 1287436  19684  11340 S   0,3  0,2   0:00.36 snapd\noad-hint\">*.csv, *.tsv and *.txt files allowed.</p>\n        </div>\n      </Dragger>\n      <div>\n        <Divider>\n          <p>or you can click below to explore pre-loaded datasets</p>\n        </Divider>\n      </div>\n      <div>\n        <ModalDefault />\n      </div>\n      <Divider>\n        <p>Or</p>\n      </Divider>\n      <Dragger\n        style={{ alignItems: 'center', minHeight: '30vh' }}\n        accept=\".csv,.tsv,.txt\"\n        beforeUpload={beforeNetworkUpload}\n        name=\"networkfile\"\n      >\n        <div className=\"dragger\">\n          <p className=\"ant-upload-drag-icon\">\n            <Icon type=\"upload\" />\n          </p>\n          <h1 style={{ fontSize: '2em' }}>\n            Click or Drag and drop here to upload the nodes dataset of your network\n          </h1>\n          <p className=\"ant-upl  827 root      20   0 1287436  19684  11340 S   0,3  0,2   0:00.36 snapd\noad-hint\">*.csv, *.tsv, and *.txt files allowed.</p>\n        </div>\n      </Dragger>\n    </div>\n\n  );\n};\n\nconst mapStateToProps = state => ({\n  attributes: state.shipyard.attributes,\n});\n\nconst mapDispatchToPropt = dispatch => ({\n  toggleLoading: () => dispatch(toggleLoading()),\n  setData: data => dispatch(setData(data)),\n  toggleDataLoaded: () => dispatch(toggleDataLoaded()),\n  toggleNetworkDataLoaded: () => {console.log(\"entraaaa\");dispatch(toggleNetworkDataLoaded());},\n  setComponentClasses: atts => dispatch(setComponentClasses(atts)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToPropt)(Loader);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col, Select, Button, Icon, Tooltip, Upload, Divider } from 'antd';\nimport { resetData, toggleSidebar, setArcsData, setColorAttribute, setNodesLabel, setNodesId } from './../../../actions';\nimport FileSaver from 'file-saver';\nimport * as vega from 'vega';\nimport * as d3 from 'd3';\nconst Dragger = Upload.Dragger;\nconst prompt= window.require('electron-prompt');\n\n\n\nconst ButtonGroup = Button.Group;\nconst Option = Select.Option;\nvar linksid = '';\nconst ActionGroup = ({ exportData, data, attributes, resetData, colorAttribute, toggleSidebar, networkLoaded, setArcsData, arcsData, setColorAttribute, setNodesLabel, setNodesId }) => {\n  const beforeArcsUpload = (e) => {\n    const selectOptions= {};\n    attributes.forEach((attribute)=>selectOptions[attribute.name]=attribute.name);\n    console.log(selectOptions);\n\n    prompt({\n    title: 'Node id',\n    height: 150,\n    label: 'Select the attribute you want to use as node identificator:',\n    value: 'id',\n    inputAttrs: {\n        type: 'text'\n    },\n    type: 'select',\n    selectOptions: selectOptions,\n  })\n  .then((r) => {\n      if(r === null) {\n          console.log('user cancelled');\n      } else {\n          linksid=r;\n          handleArcsFile(e,r);\n      }\n  })\n  .catch(console.error);\n  }\n  const handleArcsFile = (file, id) => {\n    const reader = new window.FileReader();\n    if (file == null) {\n      return;\n    }\n    reader.onload = (lEvent) => {\n      const format = file.name.split('.').pop().toLowerCase();\n      var values;\n      try {\n        console.log('TRY')\n        values = vega.read(lEvent.target.result, {type: format});\n        setNodesId(id);\n        setArcsData(values);\n\n      } catch (err) {\n        console.log('CATCH', err)\n        let ssv = d3.dsvFormat(',');\n        values = ssv.parse(lEvent.target.result);\n        delete values.columns;\n        setNodesId(id);\n        setArcsData(values);\n\n      }\n    };\n\n    reader.readAsText(file);\n  }\n  const download = () => {\n\n    let datos = [];\n    exportData.forEach(function(o){\n      let nuevo = JSON.parse(JSON.stringify(o));\n      delete nuevo.__i; delete nuevo.x; delete nuevo.y; delete nuevo.vy; delete nuevo.vx;\n      datos.push(nuevo);\n    });\n    const items = datos.slice();\n    const replacer = (key, value) => value === null ? '' : value; // specify how you want to handle null values here\n    const header = Object.keys(items[0]);\n    let csv = items.map(row => header.map(fieldName => JSON.stringify(row[fieldName], replacer)).join(','));\n    csv.unshift(header.join(','));\n    csv = csv.join('\\r\\n');\n    const blob = new Blob([csv], {type: 'ext/csv;charset=utf-8'});\n    FileSaver.saveAs(blob, 'export_data.csv');\n    console.log(exportData);\n    console.log(datos);\n    if(arcsData.length!==0)\n    {\n      var linksdata= arcsData;\n      linksdata = linksdata.map(link =>({source:link.source[linksid], target:link.target[linksid], weight:link.weigth}));\n      console.log(linksdata);\n      const linksitems = linksdata.slice();\n      const linksreplacer = (key, value) => value === null ? '' : value; // specify how you want to handle null values here\n      const linksheader = Object.keys(linksitems[0]);\n      let linkscsv = linksitems.map(row => linksheader.map(fieldName => JSON.stringify(row[fieldName], linksreplacer)).join(','));\n      linkscsv.unshift(linksheader.join(','));\n      linkscsv = linkscsv.join('\\r\\n');\n      const blob = new Blob([linkscsv], {type: 'ext/csv;charset=utf-8'});\n      FileSaver.saveAs(blob, 'export_links.csv');\n    }\n  };\n\n  const handleAttributeColorChange= (value)=> {\n    setColorAttribute(value);\n  };\n\n  const handleNodeLabelChange=(value)=>{\n    setNodesLabel(value);\n  }\n  const exportVisualization = () => {\n    let mimeType = 'text/html';\n    let catColumns = [];\n    let seqColumns = [];\n    attributes.forEach(a => {\n      if (a.type === 'categorical') {\n        catColumns.push(a.name);\n      } else {\n        seqColumns.push(a.name);\n      }\n    })\n    const elHtml = `<!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n      <meta charset=\"UTF-8\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n      <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n      <title>Navio</title>\n    </head>\n    <body>\n      <div id=\"Navio\"></div>\n\n      <script src=\"https://d3js.org/d3.v4.min.js\"></script>\n      <script src=\"https://d3js.org/d3-interpolate.v1.min.js\"></script>\n      <script src=\"https://d3js.org/d3-scale-chromatic.v1.min.js\"></script>\n      <script type=\"text/javascript\" src=\"https://unpkg.com/navio/dist/navio.min.js\"></script>\n      <script type=\"text/javascript\">\n        let nn = navio(d3.select(\"#Navio\"), 600);\n        let cat = \"CATEGORICAL\"\n        let seq = \"SEQUENTIAL\";\n      let attributes = JSON.parse('${JSON.stringify(attributes)}');\n        d3.csv(\"./export_data.csv\", function (err, data) {\n          if (err) throw err;\n        data.forEach((row) => {\n          attributes.forEach(att=> {\n            if(att.data === \"date\"){\n              let mydate = new Date(row[att.name]);\n              if(isNaN(mydate.getDate())){\n                row[att.name] = null;\n              }else {\n                row[att.name] = mydate\n              }\n\n            }\n            else if(att.data=== \"number\"){\n              let mynumber = +row[att.name];\n              if(isNaN(mynumber)){\n                row[att.name] = null;\n              }else{\n                row[att.name] = mynumber;\n              }\n            }\n          })\n        })\n\n        attributes.forEach((d,i)=>{\n            if(d.checked){\n            console.log(\"------------\");\n\n              if(d.type === cat){\n                console.log('cat',d.name);\n                nn.addCategoricalAttrib(d.name);\n              }else if(d.type === seq){\n                console.log('seq',d.name);\n                if(d.data=== \"date\"){\n                  console.log('date')\n                  nn.addSequentialAttrib(d.name,\n                            d3.scalePow()\n                              .exponent(0.25)\n                              .range([d3.interpolatePurples(0), d3.interpolatePurples(1)]))\n                }\n                else {\n                  nn.addSequentialAttrib(d.name);\n                }\n\n              }\n\n             console.log(\"------------\");\n           }\n          })\n\n        nn.data(data);\n      });\n      </script>\n    </body>\n    </html>`;\n    const elOtroHtml=`<!DOCTYPE html>\n        <html lang=\"en\">\n        <head>\n          <meta charset=\"UTF-8\">\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n          <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n          <link rel=\"stylesheet\" href=\"css/styles.css?v=1.0\">\n          <!-- Latest compiled and minified CSS -->\n          <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n          <!-- jQuery library -->\n          <title>Navio</title>\n        </head>\n        <body>\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div id=\"Navio\"></div>\n              </div>\n              <div class=\"col-md-6\">\n                <canvas\n                style={{ overflowX: 'scroll'}}\n                width= '500'\n                height= '500'\n                id=\"network\"\n              ></canvas>\n              </div>\n            </div>\n          </div>\n\n          <script src=\"https://d3js.org/d3.v4.min.js\"></script>\n          <script src=\"https://d3js.org/d3-interpolate.v1.min.js\"></script>\n          <script src=\"https://d3js.org/d3-scale-chromatic.v1.min.js\"></script>\n          <script type=\"text/javascript\" src=\"https://unpkg.com/navio/dist/navio.min.js\"></script>\n          <script type=\"text/javascript\">\n            let nn = navio(d3.select(\"#Navio\"), 600).updateCallback(updateFilteredData);\n            let cat = \"CATEGORICAL\"\n            let seq = \"SEQUENTIAL\";\n            let attributes = JSON.parse('${JSON.stringify(attributes)}');\n            d3.csv(\"./export_data.csv\", function (err, data) {\n              if (err) throw err;\n            data.forEach((row) => {\n              attributes.forEach(att=> {\n                if(att.data === \"date\"){\n                  let mydate = new Date(row[att.name]);\n                  if(isNaN(mydate.getDate())){\n                    row[att.name] = null;\n                  }else {\n                    row[att.name] = mydate\n                  }\n\n                }\n                else if(att.data=== \"number\"){\n                  let mynumber = +row[att.name];\n                  if(isNaN(mynumber)){\n                    row[att.name] = null;\n                  }else{\n                    row[att.name] = mynumber;\n                  }\n                }\n              })\n            })\n\n            attributes.forEach((d,i)=>{\n                if(d.checked){\n                console.log(\"------------\");\n\n                  if(d.type === cat){\n                    console.log('cat',d.name);\n                    nn.addCategoricalAttrib(d.name);\n                  }else if(d.type === seq){\n                    console.log('seq',d.name);\n                    if(d.data=== \"date\"){\n                      console.log('date')\n                      nn.addSequentialAttrib(d.name,\n                                d3.scalePow()\n                                  .exponent(0.25)\n                                  .range([d3.interpolatePurples(0), d3.interpolatePurples(1)]))\n                    }\n                    else {\n                      nn.addSequentialAttrib(d.name);\n                    }\n\n                  }\n\n                 console.log(\"------------\");\n               }\n              })\n\n            nn.data(data);\n          });\n\n              const nodecolor='${colorAttribute}';\n              const linkidtype='${(linksid ? attributes.find(obj => obj.name ==linksid).data : '' )}';\n              const linkid='${(linksid ? linksid: '' )}';\n              var linksnuevos,nodes;\n              var canvas = d3.select(\"#network\"),\n              width = canvas.attr(\"width\"),\n              height = canvas.attr(\"height\"),\n              ctx = canvas.node().getContext(\"2d\"),\n              r = 3,\n              color = d3.scaleOrdinal(d3.schemeCategory20),\n              simulation = d3.forceSimulation()\n                .force(\"x\", d3.forceX(width/2))\n                .force(\"y\", d3.forceY(height/2))\n                .force(\"collide\", d3.forceCollide(r+1))\n                .force(\"charge\", d3.forceManyBody()\n                  .strength(-20))\n                .force(\"link\", d3.forceLink()\n                  .id(function (d) { return d[linkid]; }));\n              d3.csv(\"./export_data.csv\", function (err, data) {\n                if (err) throw err;\n                data.forEach((row) => {\n                  attributes.forEach(att=> {\n                    if(att.data === \"date\"){\n                      let mydate = new Date(row[att.name]);\n                      if(isNaN(mydate.getDate())){\n                        row[att.name] = null;\n                      }else {\n                        row[att.name] = mydate\n                      }\n\n                    }\n                    else if(att.data=== \"number\"){\n                      let mynumber = +row[att.name];\n                      if(isNaN(mynumber)){\n                        row[att.name] = null;\n                      }else{\n                        row[att.name] = mynumber;\n                      }\n                    }\n                  })\n                })\n                nodes=data;\n                simulation.nodes(nodes);\n                d3.csv(\"./export_links.csv\", function (err, links) {\n                  if (err) throw err;\n                  if(linkidtype==='NUMBER'){\n                    linksnuevos =links.map(link =>({source: +link.source, target:+link.target, weight:link.weigth}))\n                    .filter(link => ((typeof link.source === 'number'||typeof link.source ==='string') && nodes.find(n => n[linkid] == link.source) && nodes.find(n => n[linkid] == link.target))\n                    || (typeof link.source === 'object' && nodes.find(n => n[linkid] == link.source[linkid]) && nodes.find(n => n[linkid] == link.target[linkid])));\n\n                  }\n                  else{\n                    linksnuevos= links.filter(link => ( (typeof link.source === 'number'||typeof link.source ==='string') && nodes.find(n => n[linkid] == link.source) && nodes.find(n => n[linkid] == link.target))\n                    || (typeof link.source === 'object' && nodes.find(n => n[linkid] == link.source[linkid]) && nodes.find(n => n[linkid] == link.target[linkid])));\n                  }\n                   console.log(linksnuevos);\n                   simulation.force(\"link\")\n                     .links(linksnuevos);\n                  });\n                simulation.on(\"tick\", update);\n                canvas\n                    .call(d3.drag()\n                        .container(canvas.node())\n                        .subject(dragsubject)\n                        .on(\"start\", dragstarted)\n                        .on(\"drag\", dragged)\n                        .on(\"end\", dragended));\n                function update() {\n                  ctx.clearRect(0, 0, width, height);\n                  ctx.beginPath();\n                  ctx.globalAlpha = 0.5;\n                  ctx.strokeStyle = \"#aaa\";\n                  linksnuevos.forEach(drawLink);\n                  ctx.stroke();\n                  ctx.globalAlpha = 1.0;\n                  nodes.forEach(drawNode);\n                }\n                function dragsubject() {\n                  return simulation.find(d3.event.x, d3.event.y);\n                }\n              });\n              function dragstarted() {\n                if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n                d3.event.subject.fx = d3.event.subject.x;\n                d3.event.subject.fy = d3.event.subject.y;\n                console.log(d3.event.subject);\n              }\n              function dragged() {\n                d3.event.subject.fx = d3.event.x;\n                d3.event.subject.fy = d3.event.y;\n              }\n              function dragended() {\n                if (!d3.event.active) simulation.alphaTarget(0);\n                d3.event.subject.fx = null;\n                d3.event.subject.fy = null;\n              }\n              function drawNode(d) {\n                ctx.beginPath();\n                ctx.fillStyle = color(d[nodecolor]);\n                ctx.moveTo(d.x, d.y);\n                ctx.arc(d.x, d.y, r, 0, Math.PI*2);\n                ctx.fill();\n              }\n              function drawLink(l) {\n                ctx.moveTo(l.source.x, l.source.y);\n                ctx.lineTo(l.target.x, l.target.y);\n              }\n              function updateFilteredData(newdata){\n                console.log(newdata);\n                nodes=newdata;\n                simulation.nodes(nodes);\n\n                d3.csv(\"./export_links.csv\", function (err, links) {\n                  if (err) throw err;\n                  if(linkidtype==='NUMBER'){\n                    linksnuevos =links.map(link =>({source: +link.source, target:+link.target, weight:link.weigth}))\n                    .filter(link => ((typeof link.source === 'number'||typeof link.source ==='string') && nodes.find(n => n[linkid] == link.source) && nodes.find(n => n[linkid] == link.target))\n                    || (typeof link.source === 'object' && nodes.find(n => n[linkid] == link.source[linkid]) && nodes.find(n => n[linkid] == link.target[linkid])));\n\n                  }\n                  else{\n                    linksnuevos= links.filter(link => ( (typeof link.source === 'number'||typeof link.source ==='string') && nodes.find(n => n[linkid] == link.source) && nodes.find(n => n[linkid] == link.target))\n                    || (typeof link.source === 'object' && nodes.find(n => n[linkid] == link.source[linkid]) && nodes.find(n => n[linkid] == link.target[linkid])));\n                  }\n                   console.log(linksnuevos);\n                   simulation.force(\"link\")\n                     .links(linksnuevos);\n                  });\n                simulation.alpha(1).restart();\n              }\n\n\n          </script>\n        </body>\n      </html>`;\n    const link = document.getElementById('downloadLink');\n    mimeType = mimeType || 'text/plain';\n    const filename = 'index.html';\n    link.setAttribute('download', filename);\n    if(!networkLoaded)\n    {\n      link.setAttribute('href', 'data:' + mimeType  +  ';charset=utf-8,' + encodeURIComponent(elHtml));\n    }\n    else{\n      link.setAttribute('href', 'data:' + mimeType  +  ';charset=utf-8,' + encodeURIComponent(elOtroHtml));\n    }\n    // link.click();\n    download();\n  };\n  return (\n    <div style={{ textAlign: 'center', alignItems:'center', paddingTop: '50px' }}>\n      <ButtonGroup>\n        <Tooltip\n          placement=\"bottom\"\n          title=\"Show sidebar to hide/show attributes and change their type.\"\n        >\n          <Button onClick={toggleSidebar}><Icon type=\"setting\" />Setup Navio</Button>\n        </Tooltip>\n        <Tooltip\n          placement=\"bottom\"\n          title=\"Export the filtered data in csv format.\"\n        >\n          <Button onClick={download}><Icon type=\"table\" />Export data</Button>\n        </Tooltip>\n        <Tooltip\n          placement=\"bottom\"\n          title=\"Export an embedded version of the visualization (data.csv + index.html).\"\n        >\n          <Button onClick={exportVisualization}>\n            <a href=\"#\" id=\"downloadLink\">\n              <Icon type=\"export\" />Export visualization\n            </a>\n          </Button>\n        </Tooltip>\n        <Tooltip placement=\"bottom\" title=\"Choose another dataset.\">\n          <Button onClick={resetData}><Icon type=\"swap\" />Change dataset</Button>\n        </Tooltip>\n      </ButtonGroup>\n\n      {networkLoaded && arcsData.length ===0 ?\n        (<div style={{alignItems:'center', paddingLeft:'30%', paddingRight: '30%',paddingTop: '1%'}}>\n          <Dragger\n          style={{ alignItems: 'center', minHeight: '1vh' }}\n          accept=\".csv,.tsv,.txt, .json\"\n          beforeUpload={beforeArcsUpload}\n          name=\"networkfile\"\n        >\n          <div className=\"dragger\">\n            <p className=\"ant-upload-drag-icon\">\n              <Icon type=\"upload\" />\n            </p>\n            <h1 style={{ fontSize: '1em' }}>\n              upload links file\n            </h1>\n            <p className=\"ant-upl  827 root      20   0 1287436  19684  11340 S   0,3  0,2   0:00.36 snapd\n  oad-hint\">.csv files allowed.</p>\n          </div>\n        </Dragger>\n\n      </div>\n        )\n        : ( <br></br>)\n      }\n      {networkLoaded ?\n      (<Row style={{paddingTop: '50px'}}>\n        <Col span={12}></Col>\n      <Col span= {3}>\n        <div style={{padding: '10px'}}>Color by attribute:</div>\n      </Col>\n      <Col span= {3}>\n\n      <Select  defaultValue=\"\" style={{ width: 120 }} onChange={handleAttributeColorChange}>\n        <Option value=\"\">None</Option>\n        {attributes.filter(function(x) { return x.type === 'CATEGORICAL'}).map(\n          (attribute) =>\n           <Option value={attribute.name}>{attribute.name}</Option>\n        )}\n      </Select>\n      </Col>\n      <Col span= {3}>\n        <div style={{padding: '10px'}}>Nodes Label attribute (On hover):</div>\n      </Col>\n\n    <Col span= {3}>\n\n    <Select  defaultValue=\"\" style={{ width: 120 }} onChange={handleNodeLabelChange}>\n      <Option value=\"\">None</Option>\n      {attributes.map(\n        (attribute) =>\n         <Option value={attribute.name}>{attribute.name}</Option>\n      )}\n    </Select>\n    </Col>\n\n  </Row>\n    )\n    : ( <br></br>)\n    }\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  exportData: state.shipyard.exportData,\n  data: state.shipyard.data,\n  attributes: state.shipyard.attributes,\n  networkLoaded: state.ui.networkLoaded,\n  arcsData: state.shipyard.arcsData,\n  colorAttribute: state.shipyard.colorAttribute,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  resetData: () => dispatch(resetData()),\n  toggleSidebar: () => dispatch(toggleSidebar()),\n  setArcsData: data => dispatch(setArcsData(data)),\n  setColorAttribute: attribute => dispatch(setColorAttribute(attribute)),\n  setNodesLabel: attribute => dispatch(setNodesLabel(attribute)),\n  setNodesId: id => dispatch(setNodesId(id)),\n}\n\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ActionGroup);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col, Button, Icon, Select, Tooltip, Switch } from 'antd';\nimport { toggleSettingsVisible, changeTypeStatus, changeCheckStatus, updateAttribute, addComponentClass, deleteLastComponentClass } from './../../../../actions';\n\nconst { Option, OptGroup } = Select;\nclass Attribute extends Component {\n  componentDidMount(){\n    // console.log('ATTRIBUTE', 'componentDidMount', this.props);\n  }\n  componentDidUpdate(){\n    // console.log('ATTRIBUTE', 'componentDidUpdate', this.props)\n  }\n  state = {\n    checked: this.props.checked,\n    settings: this.props.settings,\n  }\n  render () {\n    // console.log('RENDER',this.props)\n    const { index, attribute, toggleVisible, changeCheckStatus, changeTypeStatus, addComponentClass, deleteLastComponentClass } = this.props;\n\n    const ico = attribute.settings ? 'up' : 'setting';\n    console.log(attribute, ico)\n    return (\n      <Row type=\"flex\" align=\"middle\" justify=\"center\" className=\"attribute\">\n        <Col span={2} offset={1}>\n          <Button shape=\"circle\" size=\"small\" onClick={() => {\n              console.log('onClick')\n              this.setState({settings: !attribute.settings});\n              toggleVisible(index, !attribute[\"settings\"]);\n              if (attribute.settings) {\n                deleteLastComponentClass(index);\n              } else {\n                addComponentClass('hide', index);\n              }\n            }}\n          >\n            <Icon type={ico} />\n          </Button>\n        </Col>\n        <Col span={8}  offset={1}>{attribute.name}</Col>\n        <Col span={8}>\n          {console.log(attribute.name, attribute.type)}\n          <Select\n            size=\"small\"\n            style={{ width: '100%' }}\n            dropdownMatchSelectWidth={false}\n            value={attribute.type}\n            onChange={value => changeTypeStatus(attribute, value)}\n          >\n            <OptGroup label=\"unordered\">\n              <Option value=\"CATEGORICAL\">CATEGORICAL</Option>\n            </OptGroup>\n            <OptGroup label=\"ordered\">\n              <Option value=\"ORDINAL\">ORDINAL</Option>\n              <Option value=\"SEQUENTIAL\">SEQUENTIAL</Option>\n              <Option value=\"DATE\">DATE</Option>\n            </OptGroup>\n          </Select>\n        </Col>\n        <Col span={4}>\n          <Tooltip placement=\"right\" title=\"Here you can change this dimension visibility\">\n            <Switch size=\"small\" defaultChecked={true} checked={attribute.checked} style={{ marginLeft: '2em' }} onChange={checked => { console.log(checked);this.setState({checked}); changeCheckStatus(attribute, checked);}} />\n          </Tooltip>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nconst mapStateToProps = (state, param) => ({\n  attribute: state.shipyard.attributes[param.index],\n  index: param.index,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleVisible: (index, visible) => {\n    dispatch(toggleSettingsVisible(index, visible));\n  },\n  changeTypeStatus: (att, value) => {\n    dispatch(changeTypeStatus(att, value));\n    dispatch(updateAttribute());\n  },\n  changeCheckStatus: (att, status) => {\n    dispatch(changeCheckStatus(att, status));\n    dispatch(updateAttribute());\n  },\n  deleteLastComponentClass: index => dispatch(deleteLastComponentClass(index)),\n  addComponentClass: (className, index) => dispatch(addComponentClass(className, index)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Attribute);\n","import React, { Component } from 'react';\nimport { Select, Button } from 'antd';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport './sortableItem.css';\nimport { setColor, updateAttribute } from './../../../../actions';\n\nconst Option = Select.Option;\n\nclass ColorPicker extends Component {\n  componentDidUpdate(){\n    console.log('COLOR componentDidUpdate')\n  }\n  componentWillUpdate(){\n\n    console.log('COLOR componentWillUpdate')\n  }\n  render(){\n    let { setColor, name } = this.props;\n    if (this.props.type == 'categorical') {\n      return Categorical();\n    }\n    else {\n      console.log('this.props',this.props)\n      return SequentialPicker(setColor, name);\n    }\n  }\n}\n\nconst Categorical = () => {\n  const cat10 = d3.scaleOrdinal(d3.schemeCategory10);\n  // const cat20 = d3.scaleOrdinal(d3.schemeCategory20);\n  // const cat20b = d3.scaleOrdinal(d3.schemeCategory20b);\n  // const cat20c = d3.scaleOrdinal(d3.schemeCategory20c);\n  const arr10 = d3.range(10);\n  const arr20 = d3.range(20);\n  return (\n    <Select size=\"small\" defaultValue=\"scheme10\" className=\"color-selector\">\n        <Option value=\"scheme10\">\n          <div className=\"scheme10\">\n            {\n              arr10.map((d,i) => (\n                <div key={i+'10'} style={{ width: 20, height: 20, backgroundColor: cat10(d)}}>\n                </div>\n              ))\n            }\n          </div>\n        </Option>\n        {/*\n        <Option value=\"scheme20\">\n          <div className=\"scheme20\">\n            {\n              arr20.map(d => (\n                <div style={{ width: 10, height: 20, backgroundColor: cat20(d)}}>\n                </div>\n              ))\n            }\n          </div>\n        </Option>\n        <Option value=\"scheme20b\">\n          <div className=\"scheme20\">\n            {\n              arr20.map(d => (\n                <div style={{ width: 10, height: 20, backgroundColor: cat20b(d)}}>\n                </div>\n              ))\n            }\n          </div>\n        </Option>\n        <Option value=\"scheme20c\">\n          <div className=\"scheme20\">\n            {\n              arr20.map(d => (\n                <div style={{ width: 10, height: 20, backgroundColor: cat20c(d)}}>\n                </div>\n              ))\n            }\n          </div>\n        </Option>\n        */ }\n\n      </Select>\n  );\n};\n\nclass CategoricalPicker extends Component {\n  render () {\n    var cat10 = d3.scaleOrdinal(d3.schemeCategory10);\n    var cat20 = d3.scaleOrdinal(d3.schemeCategory20);\n    var cat20b = d3.scaleOrdinal(d3.schemeCategory20b);\n    var cat20c = d3.scaleOrdinal(d3.schemeCategory20c);\n    let arr10 = d3.range(10);\n    let arr20 = d3.range(20);\n    return (\n      <Select size=\"small\" defaultValue=\"scheme10\" className=\"color-selector\">\n        <Option value=\"scheme10\">\n          <div className=\"scheme10\">\n            {\n              arr10.map(d => (\n                <div style={{ width: 20, height: 20, backgroundColor: cat10(d)}}>\n                </div>\n              ))\n            }\n          </div>\n        </Option>\n        <Option value=\"scheme20\">\n          <div className=\"scheme20\">\n            {\n              arr20.map(d => (\n                <div style={{ width: 10, height: 20, backgroundColor: cat20(d)}}>\n                </div>\n              ))\n            }\n          </div>\n        </Option>\n        <Option value=\"scheme20b\">\n          <div className=\"scheme20\">\n            {\n              arr20.map(d => (\n                <div style={{ width: 10, height: 20, backgroundColor: cat20b(d)}}>\n                </div>\n              ))\n            }\n          </div>\n        </Option>\n        <Option value=\"scheme20c\">\n          <div className=\"scheme20\">\n            {\n              arr20.map(d => (\n                <div style={{ width: 10, height: 20, backgroundColor: cat20c(d)}}>\n                </div>\n              ))\n            }\n          </div>\n        </Option>\n      </Select>\n    )\n  }\n\n}\n\nconst colors = [\"blue\", \"green\", \"gray\", \"orange\",\"purple\", \"red\"];\n\n\nconst SequentialPicker = (setColor, name) => {\n  console.log(setColor)\n  return (\n    <div className=\"sequential-picker\">\n      { colors.map(d=> (\n        <Button key={d} onClick={(click) => setColor(d, name)} shape=\"circle\" style={{ backgroundColor: d }}></Button>\n        ))\n      }\n    </div>\n\n  );\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  type: ownProps.type,\n  name: ownProps.name,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setColor: (d, click) => {dispatch(setColor(d, click)); dispatch(updateAttribute());},\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ColorPicker);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { SortableElement } from 'react-sortable-hoc';\nimport { Button, Input, Divider, Icon } from 'antd';\nimport { ChromePicker } from 'react-color';\nimport Attribute from './Attribute';\nimport ColorPicker from './ColorPicker';\nimport { toggleColorVisible, setAttributeColor, setAlias } from './../../../../actions';\nimport './sortableItem.css';\n\nconst ButtonGroup = Button.Group;\nconst onChangeInput = (event, f, attribute) => {\n  console.log('onChangeInput')\n  console.log(event, f, attribute);\n}\nconst SortableItem = SortableElement(({attribute, number, componentClasses, setColor, toggleColorVisible}) => {\n  return (\n    <div className=\"sortableItem\" style={{ padding: '0.25em', backgroundColor: 'white', marginBottom: '0em', cursor: 'move', borderRadius: '2px'}}>\n      <Attribute attribute={attribute} index={number} />\n      <div className={componentClasses.join(' ')}>\n        <div className=\"settings\">\n          <hr />\n          <div className=\"color\">\n            <div>\n              <div>\n                color\n              </div>\n            </div>\n            <div>\n              <ColorPicker type={attribute.type} name={attribute.name} />\n            </div>\n          </div>\n          <hr />\n          <div className=\"alias\">\n            <div>\n              alias\n            </div>\n            <div>\n               <Input\n                size=\"small\"\n                addonAfter={[<Icon key={attribute.name} style={{ color: 'blue' }} type=\"check\" />, <Divider key={attribute.name +'1'} type=\"vertical\" />, <Icon key={attribute.name+'2'} style={{ color: 'red' }} type=\"delete\"/>]}\n                defaultValue={attribute.alias}\n                onChange={onChangeInput}\n                onPressEnter={onChangeInput}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n});\n\nconst mapStateToProps = (state, props) => ({\n  attribute: state.shipyard.attributes[props.number],\n  componentClasses: state.ui.componentClasses[props.number].classes,\n  number: props.number,\n});\n\n// const mapDispatchToProps = (dispatch, param) => {\n//   console.log('dispatch', dispatch, 'param', param);\n// };\n\nconst mapDispatchToProps = dispatch => ({\n  setColor: (color, event, index) => dispatch(setAttributeColor(color, event, index)),\n  toggleColorVisible: (index) => dispatch(toggleColorVisible(index)),\n  setAlias: (event, attribute) => dispatch(setAlias(event, attribute)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SortableItem);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { SortableContainer } from 'react-sortable-hoc';\nimport SortableItem from './SortableItem';\n\nconst SortableList = SortableContainer(({ items }) => (\n  <ul style={{ marginTop: '2em', width: '90%' }}>\n    {items.map((attribute, index) => (\n      <SortableItem key={`item-${index}`} index={index} number={index} attribute={attribute} />\n    ))}\n  </ul>\n));\n\nconst mapStateToProps = state => ({\n  items: state.shipyard.attributes,\n});\n\nexport default connect(mapStateToProps)(SortableList);\n","import React from 'react';\nimport { arrayMove } from 'react-sortable-hoc';\nimport { ChromePicker } from 'react-color';\nimport { connect } from 'react-redux';\nimport SortableList from './SortableList';\nimport { changeCheckStatus, updateAttribute, changeTypeStatus, toggleSettingsVisible, setAttributes, setAttributeColor, swapComponentClasses } from './../../../../actions';\nimport './card.css';\n\nconst content = setColor => (\n  <div>\n    <ChromePicker onChangeComplete={(color, event) => setColor(color, event, 0)} />\n  </div>\n);\n\nconst SortableComponent = ({ attributes, toggleVisible, reorderAttributes, setColor }) => {\n  const onSortEnd = ({ oldIndex, newIndex }) => {\n    if (oldIndex === newIndex) { return; };\n    let copy = [...attributes];\n    let newArr = arrayMove(copy, oldIndex, newIndex);\n    reorderAttributes(newArr, oldIndex, newIndex);\n  }\n  return (\n    <SortableList\n      onSortEnd={onSortEnd}\n    />\n  );\n};\n\nconst mapStateToProps = state => ({\n  attributes: state.shipyard.attributes,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeCheckStatus: (att, status) => {\n    dispatch(changeCheckStatus(att, status));\n    dispatch(updateAttribute());\n  },\n  changeTypeStatus: (att, value) => { dispatch(changeTypeStatus(att, value)); dispatch(updateAttribute()); },\n  toggleVisible: (index, visible) => { dispatch(toggleSettingsVisible(index, visible)); },\n  reorderAttributes: (atts, oldIndex, newIndex) => { dispatch(setAttributes(atts)); dispatch(swapComponentClasses(oldIndex, newIndex)); dispatch(updateAttribute()); },\n  setColor: (color, event, type) => dispatch(setAttributeColor(color, event, type)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SortableComponent);\n","import React, { Component } from 'react';\n\nimport { Row, Col } from 'antd';\nimport { connect } from 'react-redux';\nimport * as d3 from '../../../../node_modules/d3/build/d3.js';\nimport ActionGroup from './ActionGroup';\nimport Side from './sidebar/Sider';\nimport { updateAttribute, updateFilteredData } from './../../../actions';\nimport './sidebar.css';\nimport * as d3ScaleChromatic from \"d3-scale-chromatic\";\n\n// import navio from 'navio';\nimport navio from 'navio';\n\nconst cat = 'CATEGORICAL';\nconst seq = 'SEQUENTIAL';\nconst dat = 'DATE';\nconst ord = 'ORDINAL';\nclass NavioContainer extends Component {\n  componentDidMount() {\n    this.setupNavio();\n  }\n  componentDidUpdate() {\n    const { updated, updateAttribute } = this.props;\n    if (updated) {\n      this.deleteWidget();\n      updateAttribute();\n      this.setupNavio();\n    }\n  }\n  deleteWidget() {\n    var myNode = document.getElementById(\"vis\");\n    while (myNode.firstChild) {\n        myNode.removeChild(myNode.firstChild);\n    }\n  }\n  getScaleOrdinalScheme = (scheme) => {\n    switch(scheme) {\n      case 'scheme10':\n        return d3.scaleOrdinal(d3ScaleChromatic.schemeCategory10);\n      // John: removed them because they don't exist anymore\n      // case 'scheme20':\n      //   return d3.scaleOrdinal(d3ScaleChromatic.schemeCategory20);\n      // case 'scheme20b':\n      //   return d3.scaleOrdinal(d3ScaleChromatic.schemeCategory20b);\n      // case 'scheme20c':\n      //   return d3.scaleOrdinal(d3ScaleChromatic.schemeCategory20c);\n      default:\n        //scheme 10 default\n        return d3.scaleOrdinal(d3ScaleChromatic.schemeCategory10);\n    }\n  }\n  getScaleOrdinalColor = (color) => {\n    switch (color) {\n      case 'blue':\n        return d3.scaleOrdinal(d3ScaleChromatic.schemeBlues);\n      case 'purple':\n        return d3.scaleOrdinal(d3ScaleChromatic.schemePurples);\n      case 'red':\n        return d3.scaleOrdinal(d3ScaleChromatic.schemeReds);\n      case 'green':\n        return d3.scaleOrdinal(d3ScaleChromatic.schemeGreens);\n      case 'gray':\n        return d3.scaleOrdinal(d3ScaleChromatic.schemeGreys);\n      case 'orange':\n        return d3.scaleOrdinal(d3ScaleChromatic.schemeOranges);\n      default:\n        // purple\n        console.log('default', color);\n        return d3.scaleLinear(d3ScaleChromatic.schemeOranges);\n\n    }\n  }\n  getScaleTimeColor = (color) => {\n    switch (color) {\n      case 'blue':\n        return d3.scaleTime(d3ScaleChromatic.schemeBlues);\n      case 'purple':\n        return d3.scaleTime(d3ScaleChromatic.schemePurples);\n      case 'red':\n        return d3.scaleTime(d3ScaleChromatic.schemeReds);\n      case 'green':\n        return d3.scaleTime(d3ScaleChromatic.schemeGreens);\n      case 'gray':\n        return d3.scaleTime(d3ScaleChromatic.schemeGreys);\n      case 'orange':\n        return d3.scaleTime(d3ScaleChromatic.schemeOranges);\n      default:\n        // purple\n        console.log('default!!!!!!!!!!!!!!!!!')\n        // color = null;\n        return d3.scaleTime(d3ScaleChromatic.schemeGreys);\n    }\n  }\n  setupNavio = () => {\n    this.nn = new navio(d3.select(this.target), 600).updateCallback(this.props.updateFilteredData);\n    for (var i = 0; i < this.props.attributes.length; i++) {\n        let d = this.props.attributes[i];\n        console.log(d);\n        if (d.checked) {\n          let color;\n          switch (d.type) {\n            case cat:\n              color = this.getScaleOrdinalScheme(d.color);\n              console.log(d.name, color)\n              this.nn.addCategoricalAttrib(d.name);\n              break;\n            default:\n              if (d.data === dat) {\n                console.log('is date',d.color);\n                color = this.getScaleTimeColor(d.color);\n\n                console.log(d.name, color)\n                // this.nn.addSequentialAttrib(d.name);\n                this.nn.addSequentialAttrib(d.name,\n                        d3.scalePow()\n                          // .exponent(0)\n                          .range([d3ScaleChromatic.interpolatePurples(0), d3ScaleChromatic.interpolatePurples(1)]))\n                break;\n              }\n              else {\n                  color = this.getScaleOrdinalColor(d.color);\n                  console.log(d.name, color)\n                  this.nn.addSequentialAttrib(d.name);\n                   // this.nn.addSequentialAttrib(d.name,\n                   //      d3.scalePow()\n                   //        .exponent(0.25)\n                   //        .range([d3ScaleChromatic.interpolatePurples(0), d3ScaleChromatic.interpolatePurples(1)]))\n\n                  break;\n              }\n\n          }\n      }\n    }\n    this.nn.data(this.props.data);\n  }\n  setupNavio2 = () => {\n    this.nn = new navio(d3.select(this.target), 600).updateCallback(this.props.updateFilteredData);\n    for (var i = 0; i < this.props.attributes.length; i++) {\n        let d = this.props.attributes[i];\n            if (d.checked) {\n        if (d.type === cat) {\n          this.nn.addCategoricalAttrib(d.name,\n            d3.scaleOrdinal(d3.schemeCategory10));\n        } else if (d.type === seq) {\n          if (d.data === 'date') {\n            this.nn.addSequentialAttrib(d.name,\n              d3.scaleTime(d3ScaleChromatic.schemeBlues))\n                // .domain(d.min, d.max)\n                // .range([d3ScaleChromatic.interpolatePurples(0), d3ScaleChromatic.interpolatePurples(1)]))\n          }\n          else {\n            console.log(d3)\n            console.log(d3ScaleChromatic)\n            this.nn.addSequentialAttrib(d.name)\n              // d3.scaleLinear()\n              //   // .base(Math.E)\n              //   .domain(d.min, d.max)\n              //   .range([0,600]))\n          }\n        }\n      }\n    }\n    this.nn.data(this.props.data);\n  };\n  render () {\n    const { showSidebar } = this.props;\n    const sidebarStyles = ['sidebar'];\n    if (!showSidebar) {sidebarStyles.push('hide')}\n    return (\n      <div>\n        <ActionGroup />\n        <Row>\n          <Col span={10} className={sidebarStyles.join(' ')}>\n            <Side />\n          </Col>\n          <Col span={showSidebar ? 14 : 24}>\n            <div\n              style={{ width: '100%', overflowX: 'scroll', minHeight: '700px' }}\n              id=\"vis\"\n              ref={(target) => this.target = target }\n            />\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  showSidebar: state.ui.showSidebar,\n  attributes: state.shipyard.attributes,\n  data: state.shipyard.data,\n  updated: state.shipyard.updated,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateAttribute: () => dispatch(updateAttribute()),\n  updateFilteredData: data => dispatch(updateFilteredData(data)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavioContainer);\n","import React, { Component } from 'react';\n\nimport { Row, Col } from 'antd';\nimport { connect } from 'react-redux';\nimport * as d3 from './../../../node_modules/d3/build/d3.js';\nimport { updateAttribute, updateFilteredData } from './../../actions';\nimport * as d3ScaleChromatic from \"d3-scale-chromatic\";\n\n// import navio from 'navio';\nimport navio from 'navio';\n\nconst cat = 'CATEGORICAL';\nconst seq = 'SEQUENTIAL';\nconst dat = 'DATE';\nconst ord = 'ORDINAL';\nclass NavioContainer extends Component {\n  componentDidMount() {\n    this.setupNavio();\n  }\n  componentDidUpdate() {\n    const { updated, updateAttribute } = this.props;\n    if (updated) {\n      this.deleteWidget();\n      updateAttribute();\n      this.setupNavio();\n    }\n  }\n  deleteWidget() {\n    var myNode = document.getElementById(\"vis\");\n    while (myNode.firstChild) {\n        myNode.removeChild(myNode.firstChild);\n    }\n  }\n  getScaleOrdinalScheme = (scheme) => {\n    switch(scheme) {\n      case 'scheme10':\n        return d3.scaleOrdinal(d3ScaleChromatic.schemeCategory10);\n      // John: removed them because they don't exist anymore\n      // case 'scheme20':\n      //   return d3.scaleOrdinal(d3ScaleChromatic.schemeCategory20);\n      // case 'scheme20b':\n      //   return d3.scaleOrdinal(d3ScaleChromatic.schemeCategory20b);\n      // case 'scheme20c':\n      //   return d3.scaleOrdinal(d3ScaleChromatic.schemeCategory20c);\n      default:\n        //scheme 10 default\n        return d3.scaleOrdinal(d3ScaleChromatic.schemeCategory10);\n    }\n  }\n  getScaleOrdinalColor = (color) => {\n    switch (color) {\n      case 'blue':\n        return d3.scaleOrdinal(d3ScaleChromatic.schemeBlues);\n      case 'purple':\n        return d3.scaleOrdinal(d3ScaleChromatic.schemePurples);\n      case 'red':\n        return d3.scaleOrdinal(d3ScaleChromatic.schemeReds);\n      case 'green':\n        return d3.scaleOrdinal(d3ScaleChromatic.schemeGreens);\n      case 'gray':\n        return d3.scaleOrdinal(d3ScaleChromatic.schemeGreys);\n      case 'orange':\n        return d3.scaleOrdinal(d3ScaleChromatic.schemeOranges);\n      default:\n        // purple\n        console.log('default', color);\n        return d3.scaleLinear(d3ScaleChromatic.schemeOranges);\n\n    }\n  }\n  getScaleTimeColor = (color) => {\n    switch (color) {\n      case 'blue':\n        return d3.scaleTime(d3ScaleChromatic.schemeBlues);\n      case 'purple':\n        return d3.scaleTime(d3ScaleChromatic.schemePurples);\n      case 'red':\n        return d3.scaleTime(d3ScaleChromatic.schemeReds);\n      case 'green':\n        return d3.scaleTime(d3ScaleChromatic.schemeGreens);\n      case 'gray':\n        return d3.scaleTime(d3ScaleChromatic.schemeGreys);\n      case 'orange':\n        return d3.scaleTime(d3ScaleChromatic.schemeOranges);\n      default:\n        // purple\n        console.log('default!!!!!!!!!!!!!!!!!')\n        // color = null;\n        return d3.scaleTime(d3ScaleChromatic.schemeGreys);\n    }\n  }\n  setupNavio = () => {\n    this.nn = new navio(d3.select(this.target), 600).updateCallback(this.props.updateFilteredData);\n    for (var i = 0; i < this.props.attributes.length; i++) {\n        let d = this.props.attributes[i];\n        console.log(d);\n        if (d.checked) {\n          let color;\n          switch (d.type) {\n            case cat:\n              color = this.getScaleOrdinalScheme(d.color);\n              console.log(d.name, color)\n              this.nn.addCategoricalAttrib(d.name);\n              break;\n            default:\n              if (d.data === dat) {\n                console.log('is date',d.color);\n                color = this.getScaleTimeColor(d.color);\n\n                console.log(d.name, color)\n                // this.nn.addSequentialAttrib(d.name);\n                this.nn.addSequentialAttrib(d.name,\n                        d3.scalePow()\n                          // .exponent(0)\n                          .range([d3ScaleChromatic.interpolatePurples(0), d3ScaleChromatic.interpolatePurples(1)]))\n                break;\n              }\n              else {\n                  color = this.getScaleOrdinalColor(d.color);\n                  console.log(d.name, color)\n                  this.nn.addSequentialAttrib(d.name);\n                   // this.nn.addSequentialAttrib(d.name,\n                   //      d3.scalePow()\n                   //        .exponent(0.25)\n                   //        .range([d3ScaleChromatic.interpolatePurples(0), d3ScaleChromatic.interpolatePurples(1)]))\n\n                  break;\n              }\n\n          }\n      }\n    }\n    this.nn.data(this.props.data);\n  }\n  setupNavio2 = () => {\n    this.nn = new navio(d3.select(this.target), 600).updateCallback(this.props.updateFilteredData);\n    for (var i = 0; i < this.props.attributes.length; i++) {\n        let d = this.props.attributes[i];\n            if (d.checked) {\n        if (d.type === cat) {\n          this.nn.addCategoricalAttrib(d.name,\n            d3.scaleOrdinal(d3.schemeCategory10));\n        } else if (d.type === seq) {\n          if (d.data === 'date') {\n            this.nn.addSequentialAttrib(d.name,\n              d3.scaleTime(d3ScaleChromatic.schemeBlues))\n                // .domain(d.min, d.max)\n                // .range([d3ScaleChromatic.interpolatePurples(0), d3ScaleChromatic.interpolatePurples(1)]))\n          }\n          else {\n            console.log(d3)\n            console.log(d3ScaleChromatic)\n            this.nn.addSequentialAttrib(d.name)\n              // d3.scaleLinear()\n              //   // .base(Math.E)\n              //   .domain(d.min, d.max)\n              //   .range([0,600]))\n          }\n        }\n      }\n    }\n    this.nn.data(this.props.data);\n  };\n  render () {\n    return (\n      <div>\n        <Row>\n          <Col >\n            <div\n              style={{ width: '100%', overflowX: 'scroll', minHeight: '600px' }}\n              id=\"vis\"\n              ref={(target) => this.target = target }\n            />\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  showSidebar: state.ui.showSidebar,\n  attributes: state.shipyard.attributes,\n  data: state.shipyard.exportData,\n  updated: state.shipyard.updated,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateAttribute: () => dispatch(updateAttribute()),\n  updateFilteredData: data => dispatch(updateFilteredData(data)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavioContainer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Table } from 'antd';\n\nconst Sample = ({ exportData, attributes }) => {\n  const preview = exportData.slice(0);\n  console.log(preview)\n  let columns = [];\n  // let dates =[];\n  attributes.forEach(a => {\n    if (a.data !== 'DATE') {\n      //at this moment, do not visualize dates in the sample table \n      let column = {};\n      column.title = a.name;\n      column.dataIndex = a.name;\n      column.key = a.name;\n      column.width = 150;\n      columns.push(column);\n    }\n  });\n  // parse date to string\n  // dates.forEach(d => {\n  //   preview.forEach(row => {\n  //     row[d] = row[d].toString();\n  //   });\n  // });\n  preview.forEach(p => { p.key = p.__seqId });\n  return (\n    <Row>\n      <Table bordered pagination={true} dataSource={preview} columns={columns} scroll={{ x: columns.length * 150, y: '70vh' }} />\n    </Row>\n  );\n};\n\nconst mapStateToProps = state => ({\n  exportData: state.shipyard.exportData,\n  attributes: state.shipyard.attributes,\n});\n\nexport default connect(mapStateToProps)(Sample);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Loader from './loader/Loader';\nimport NavioContainer from './navio-container/NavioContainer';\nimport NodeNetDiagram from './NodeNetDiagram';\nimport Sample from './sample-data/Sample';\n\n\nconst Playground = ({ dataLoaded, showSidebar, networkLoaded }) => {\n    let content;\n    if (dataLoaded) {\n      content = <div><NavioContainer /><Sample /> </div>\n    }\n    else if (networkLoaded) {\n      content = <NodeNetDiagram />\n    }\n    else {\n      content= <Loader />\n    }\n    return (\n    <div style={{ height: '100%' }}>\n        { content }\n\n\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  dataLoaded: state.ui.dataLoaded,\n  showSidebar: state.ui.showSidebar,\n  networkLoaded: state.ui.networkLoaded\n});\n\nexport default connect(mapStateToProps)(Playground);\n","import { Affix, Layout } from 'antd';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport HeaderComponent from './header/Header';\nimport FooterComponent from './footer/Footer';\nimport Playground from './playground/Playground';\n\nconst { Header, Content, Footer } = Layout;\nconst headerStyle = {\n  marginBottom: '1em',\n  padding: 0,\n  backgroundColor: 'white',\n  boxShadow: '0 5px 4px rgba(0,0,0,0.15), 0 4px 4px rgba(0,0,0,0.12)',\n};\nconst mainStyle = {\n  minHeight: '100vh',\n};\nconst App = loading => (\n  <div style={mainStyle}>\n    <Layout style={{ height: '100vh' }}>\n      <Affix>\n        <Header style={headerStyle}>\n          <HeaderComponent />\n        </Header>\n      </Affix>\n      <Content>\n        { loading ? <Playground /> : 'loading' }\n      </Content>\n      <Footer>\n        <FooterComponent />\n      </Footer>\n    </Layout>\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  loading: state.ui.loading,\n});\n\nexport default connect(mapStateToProps)(App);\n\n","import {\n  SET_DATA,\n  SET_ARCS_DATA,\n  SET_NODES_ID,\n  RESET_DATA,\n  CHANGE_CHECK_STATUS,\n  CHANGE_TYPE_STATUS,\n  UPDATE_ATTRIBUTE,\n  UPDATE_FILTERED_DATA,\n  TOGGLE_SETTINGS_VISIBLE,\n  SET_ATTRIBUTES,\n  SET_COLOR_ATTRIBUTE,\n  SET_NODES_LABEL,\n  SET_ATTRIBUTE_COLOR,\n  TOGGLE_COLOR_VISIBLE,\n  SET_ALIAS,\n} from './../actions/index';\n\nconst initialState = {\n  data: [],\n  arcsData: [],\n  nodesid:\"\",\n  attributes: [],\n  linksAttributes:[],\n  colorAttribute: \"\",\n  nodesLabel: \"\",\n  exportData: [],\n  exportLinksData: [],\n  source: [],\n  linksSource: [],\n  updated: false,\n  datasets: [\n    {\n      id: 1,\n      title: 'Followers of presidential candidates Colombia 2018',\n      description: 'Dataset with information about followers on twitter of the presidential cadidates.',\n      name: 'all_followers_id.csv',\n      size: 1048575,\n      n_attributes: 10,\n    },\n    {\n      id: 2,\n      title: 'MoMA Collection',\n      description: 'Evolving collection contains almost 130,000 works of modern and contemporary art.',\n      name: 'Artworks_less_columns.csv',\n      size: 131585,\n      n_attributes: 14,\n    },\n    {\n      id: 3,\n      title: 'VAST Challenge 2017',\n      description: 'The VAST Challenge 2017 offered three mini-challenges and a grand challenge dealing with environmental problems potentially caused by human patterns of life and potentially harmful chemically laden effluent plumes being emitted from factory smokestacks. The data provided included traffic patterns, sensor data though the Boonsong Lekagul Nature Preserve.',\n      name: 'Lekagul Sensor Data.csv',\n      size: 171477,\n      n_attributes: 4,\n    },\n  ],\n};\nconst shipyard = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_DATA:\n      return Object.assign({}, state, {\n        source: action.source,\n        data: action.data,\n        attributes: action.attributes,\n        exportData: action.data,\n      });\n    case SET_ARCS_DATA:\n      return Object.assign({}, state, {\n        linksSource: action.source,\n        arcsData: action.arcsData,\n        linksAttributes: action.attributes,\n        exportLinksData: action.arcsData,\n      });\n    case SET_NODES_ID:\n      return Object.assign({}, state, {\n        nodesid: action.id,\n      });\n    case RESET_DATA:\n      return initialState;\n    case CHANGE_CHECK_STATUS:\n    let attrs = state.attributes.slice(0);\n    const pos = attrs.map(e => e.name).indexOf(action.attribute.name);\n    attrs[pos].checked = action.status;\n    return Object.assign({}, state, {\n      attributes: attrs,\n    });\n    case CHANGE_TYPE_STATUS:\n      let attrs2 = state.attributes;\n      const pos2 = attrs2.map(e => e.name).indexOf(action.attribute.name);\n      attrs2[pos2].type = action.status;\n\n      //reemplazar la columna del valor cambiado\n      let original = [...state.source];\n      let sourceData = state.source.slice();\n      console.log('source',sourceData);\n      console.log('action.status',action.status);\n      //verificar que no se modifique source!!!\n      switch(action.status) {\n        case 'date':\n          sourceData.forEach(datum=> {\n            datum[action.attribute.name] = new Date(datum[action.attribute.name]);\n          });\n          break;\n        case 'sequential':\n          sourceData.forEach(datum=> {\n            datum[action.attribute.name] = +datum[action.attribute.name];\n          });\n          break;\n        default:\n          console.log('default case')\n          sourceData.forEach(datum=> {\n            datum[action.attribute.name] = datum[action.attribute.name];\n          });\n          break;\n      }\n      let actualData = state.data.slice();\n      actualData.forEach((d,i)=> {\n        d[action.attribute.name] = sourceData[i][action.attribute.name];\n      })\n      return Object.assign({}, state, {\n        attributes: attrs2,\n        //checkar si funciona cambiar data -> state.source\n        data: actualData,\n      })\n    case UPDATE_ATTRIBUTE:\n      return Object.assign({}, state, {\n        updated: !state.updated,\n      });\n    case UPDATE_FILTERED_DATA:\n      return Object.assign({}, state, {\n        exportData: action.exportData,\n      });\n    case TOGGLE_SETTINGS_VISIBLE:\n      let items = state.attributes.slice(0);\n      items[action.index][\"settings\"] = action.visible;\n      console.log(items)\n      return Object.assign({}, state, {\n        attributes: items,\n      });\n    case SET_ATTRIBUTES:\n      return Object.assign({}, state, {\n        attributes: action.attributes,\n      });\n    case SET_COLOR_ATTRIBUTE:\n      return Object.assign({}, state, {\n        colorAttribute: action.attribute,\n      });\n    case SET_NODES_LABEL:\n      return Object.assign({}, state, {\n        nodesLabel: action.attribute,\n      });\n    case SET_ATTRIBUTE_COLOR:\n      let attributesColor = [...state.attributes];\n      let att = attributesColor.forEach(d=> {\n        if(d.name == action.attributeName) {\n          d[\"color\"] = action.color;\n        }\n      });\n      return Object.assign({}, state, {\n        attributes: attributesColor,\n      });\n    case SET_ALIAS:\n      console.log('SET_ALIAS:\\n',action)\n      return state;\n    case TOGGLE_COLOR_VISIBLE:\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default shipyard;\n","import { SHOW_MODAL, TOGGLE_LOADING, TOGGLE_DATA_LOADED, TOGGLE_NETWORK_DATA_LOADED, RESET_DATA, TOGGLE_SIDEBAR, DELETE_COMPONENT_CLASS, ADD_COMPONENT_CLASS, SET_COMPONENT_CLASSES, SWAP_COMPONENT_CLASSES } from './../actions/index';\n\nconst initialState = {\n  confirmLoading: false,\n  closed: true,\n  loading: false,\n  visible: false,\n  dataLoaded: false,\n  networkLoaded: false,\n  showSidebar: false,\n  componentClasses: ['box'],\n};\nconst ui = (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_MODAL:\n      return Object.assign({}, state, {\n        visible: !state.visible,\n      });\n    case TOGGLE_LOADING:\n      return Object.assign({}, state, {\n        loading: !state.loading,\n      });\n    case TOGGLE_DATA_LOADED:\n      return Object.assign({}, state, {\n        dataLoaded: !state.dataLoaded,\n      });\n    case TOGGLE_NETWORK_DATA_LOADED:\n      console.log(\"llegaaaa\");\n      return Object.assign({}, state, {\n        networkLoaded: !state.networkLoaded,\n      });\n    case RESET_DATA:\n      return initialState;\n    case TOGGLE_SIDEBAR:\n      return Object.assign({}, state, {\n        showSidebar: !state.showSidebar,\n      });\n    case DELETE_COMPONENT_CLASS:\n      let componentsDeleted = state.componentClasses.splice(0);\n      componentsDeleted[action.index].classes = [\"box\"];\n      return Object.assign({}, state, {\n        componentClasses: componentsDeleted,\n      });\n    case ADD_COMPONENT_CLASS:\n      console.log(action)\n      const componentAdd = ['box', action.className];\n      let componentsAdd = state.componentClasses.splice(0);\n      componentsAdd[action.index].classes = componentAdd;\n      return Object.assign({}, state, {\n        componentClasses: componentsAdd,\n      });\n    case SWAP_COMPONENT_CLASSES:\n      let temp;\n      let swaped = state.componentClasses.splice(0);\n      temp = swaped[action.i];\n      swaped[action.i] = swaped[action.j];\n      swaped[action.j] = temp;\n      return Object.assign({}, state, {\n        componentClasses: swaped,\n      });\n    case SET_COMPONENT_CLASSES:\n      let array = [];\n      console.log(action)\n      console.log(state.componentClasses)\n      action.attributes.forEach((d, k)=> {\n        let i = {};\n        i.classes = ['box', 'hide'];\n        i.index = k;\n        array.push(i);\n      })\n      return Object.assign({}, state, {\n        componentClasses: array,\n      })\n    default:\n      return state;\n  }\n};\n\nexport default ui;\n","import { combineReducers } from 'redux';\nimport shipyard from './shipyard';\nimport ui from './ui';\n\nexport default combineReducers({\n  shipyard,\n  ui,\n});\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport thunkMiddleware from 'redux-thunk';\nimport { render } from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { createLogger } from 'redux-logger';\nimport App from './components/App';\nimport rootReducer from './reducers';\nimport registerServiceWorker from './registerServiceWorker';\nimport './App.css';\n\nconst loggerMiddleware = createLogger();\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(\n    thunkMiddleware,\n    loggerMiddleware,\n  ),\n);\nrender(<Provider store={store}><App /></Provider>, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}